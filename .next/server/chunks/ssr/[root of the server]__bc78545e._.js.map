{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/reehju/Documents/code/hydros/hydros-world/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/reehju/Documents/code/hydros/hydros-world/components/ui/button.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"cursor-pointer font-herculanum inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-full text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n}\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,geACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///Users/reehju/Documents/code/hydros/hydros-world/lib/utils/utils.tsx"],"sourcesContent":["import Image from \"next/image\";\n\nexport function HypeLogo({\n  width = 10,\n  height = 10,\n  className = \"ml-1\",\n}: {\n  width?: number;\n  height?: number;\n  className?: string;\n}) {\n  return (\n    <span className=\"inline-flex items-center\">\n      <Image\n        src=\"/images/hype-logo.png\"\n        alt=\"HYPE\"\n        width={width}\n        height={height}\n        className={className}\n      />\n    </span>\n  );\n}\n\nexport function Avatar({\n  width = 30,\n  height = 30,\n  className = \"ml-1\",\n  onClick,\n}: {\n  width?: number;\n  height?: number;\n  className?: string;\n  onClick?: () => void;\n}) {\n  return (\n    <span className=\"inline-flex items-center cursor-pointer\" onClick={onClick}>\n      <Image\n        src=\"/images/avatar.png\"\n        alt=\"Avatar\"\n        width={width}\n        height={height}\n        className={className}\n      />\n    </span>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;;AAEO,SAAS,SAAS,EACvB,QAAQ,EAAE,EACV,SAAS,EAAE,EACX,YAAY,MAAM,EAKnB;IACC,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC,6HAAA,CAAA,UAAK;YACJ,KAAI;YACJ,KAAI;YACJ,OAAO;YACP,QAAQ;YACR,WAAW;;;;;;;;;;;AAInB;AAEO,SAAS,OAAO,EACrB,QAAQ,EAAE,EACV,SAAS,EAAE,EACX,YAAY,MAAM,EAClB,OAAO,EAMR;IACC,qBACE,8OAAC;QAAK,WAAU;QAA0C,SAAS;kBACjE,cAAA,8OAAC,6HAAA,CAAA,UAAK;YACJ,KAAI;YACJ,KAAI;YACJ,OAAO;YACP,QAAQ;YACR,WAAW;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///Users/reehju/Documents/code/hydros/hydros-world/lib/env.ts"],"sourcesContent":["/**\n * Environment variable utilities for Netlify functions\n * Based on: https://docs.netlify.com/functions/environment-variables/#access-environment-variables\n */\n\n/**\n * Get an environment variable value\n * @param key The environment variable name\n * @param defaultValue Optional default value if the environment variable is not set\n * @returns The environment variable value or the default value\n */\nexport function getEnv(key: string, defaultValue: string = \"\"): string {\n  return process.env[key] || defaultValue;\n}\n\n/**\n * Get an environment variable as a boolean\n * @param key The environment variable name\n * @param defaultValue Optional default value if the environment variable is not set\n * @returns The environment variable as a boolean or the default value\n */\nexport function getEnvBoolean(\n  key: string,\n  defaultValue: boolean = false\n): boolean {\n  const value = process.env[key];\n  if (value === undefined || value === \"\") {\n    return defaultValue;\n  }\n  return [\"true\", \"1\", \"yes\"].includes(value.toLowerCase());\n}\n\n/**\n * Get an environment variable as a number\n * @param key The environment variable name\n * @param defaultValue Optional default value if the environment variable is not set or not a valid number\n * @returns The environment variable as a number or the default value\n */\nexport function getEnvNumber(key: string, defaultValue: number = 0): number {\n  const value = process.env[key];\n  if (value === undefined || value === \"\") {\n    return defaultValue;\n  }\n  const parsed = Number(value);\n  return isNaN(parsed) ? defaultValue : parsed;\n}\n\n/**\n * Get an environment variable as an array of strings\n * @param key The environment variable name\n * @param defaultValue Optional default value if the environment variable is not set\n * @param separator The separator to split the string by (default: comma)\n * @returns The environment variable as an array of strings or the default value\n */\nexport function getEnvArray(\n  key: string,\n  defaultValue: string[] = [],\n  separator: string = \",\"\n): string[] {\n  const value = process.env[key];\n  if (value === undefined || value === \"\") {\n    return defaultValue;\n  }\n  return value.split(separator).map((item) => item.trim());\n}\n\n/**\n * Check if an environment variable is defined\n * @param key The environment variable name\n * @returns True if the environment variable is defined and not empty\n */\nexport function hasEnv(key: string): boolean {\n  const value = process.env[key];\n  return value !== undefined && value !== \"\";\n}\n\n// Specific environment variables from .env file\nexport const ENV = {\n  // NFT related\n  HYDROS_NFT_ADDRESS: getEnv(\n    \"NEXT_PUBLIC_HYDROS_NFT_ADDRESS\",\n    \"0xa0EC58a2cBf6bCAF653f5a42e8aBa6967807c8Da\"\n  ),\n\n  // Network related\n  RPC_URL: getEnv(\n    \"NEXT_PUBLIC_RPC_URL\",\n    \"https://rpc.hyperliquid-testnet.xyz/evm\"\n  ),\n  EXPLORER_URL: getEnv(\n    \"NEXT_PUBLIC_EXPLORER_URL\",\n    \"https://testnet.purrsec.com/tx/\"\n  ),\n  CHAIN_ID: getEnvNumber(\"NEXT_PUBLIC_CHAIN_ID\", 998),\n\n  // WalletConnect\n  WALLET_CONNECT_PROJECT_ID: getEnv(\n    \"NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID\",\n    \"a03353371f008832b7e0c8d3f508bd1c\" // This is a placeholder - replace with your actual project ID\n  ),\n\n  // Access control\n  WHITELIST_ADDRESSES: getEnvArray(\"NEXT_PUBLIC_WHITELIST_ADDRESSES\", [\n    \"0x4cf877ACA8eD18372BB28791c0c69339c27F7d78\",\n    \"0x1234567890123456789012345678901234567890\",\n  ]),\n};\n\n// Contract addresses\nexport const CONTRACT_ADDRESS = ENV.HYDROS_NFT_ADDRESS; // Replace with actual contract address\n\n// Chain Configuration\nexport const CHAIN_ID = ENV.CHAIN_ID;\nexport const CHAIN_NAME = \"Hype Testnet\";\nexport const RPC_URL = ENV.RPC_URL;\n\n// Environment settings\nexport const IS_PRODUCTION = process.env.NODE_ENV === \"production\";\nexport const IS_DEVELOPMENT = process.env.NODE_ENV === \"development\";\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;CAKC;;;;;;;;;;;;;;AACM,SAAS,OAAO,GAAW,EAAE,eAAuB,EAAE;IAC3D,OAAO,QAAQ,GAAG,CAAC,IAAI,IAAI;AAC7B;AAQO,SAAS,cACd,GAAW,EACX,eAAwB,KAAK;IAE7B,MAAM,QAAQ,QAAQ,GAAG,CAAC,IAAI;IAC9B,IAAI,UAAU,aAAa,UAAU,IAAI;QACvC,OAAO;IACT;IACA,OAAO;QAAC;QAAQ;QAAK;KAAM,CAAC,QAAQ,CAAC,MAAM,WAAW;AACxD;AAQO,SAAS,aAAa,GAAW,EAAE,eAAuB,CAAC;IAChE,MAAM,QAAQ,QAAQ,GAAG,CAAC,IAAI;IAC9B,IAAI,UAAU,aAAa,UAAU,IAAI;QACvC,OAAO;IACT;IACA,MAAM,SAAS,OAAO;IACtB,OAAO,MAAM,UAAU,eAAe;AACxC;AASO,SAAS,YACd,GAAW,EACX,eAAyB,EAAE,EAC3B,YAAoB,GAAG;IAEvB,MAAM,QAAQ,QAAQ,GAAG,CAAC,IAAI;IAC9B,IAAI,UAAU,aAAa,UAAU,IAAI;QACvC,OAAO;IACT;IACA,OAAO,MAAM,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,OAAS,KAAK,IAAI;AACvD;AAOO,SAAS,OAAO,GAAW;IAChC,MAAM,QAAQ,QAAQ,GAAG,CAAC,IAAI;IAC9B,OAAO,UAAU,aAAa,UAAU;AAC1C;AAGO,MAAM,MAAM;IACjB,cAAc;IACd,oBAAoB,OAClB,kCACA;IAGF,kBAAkB;IAClB,SAAS,OACP,uBACA;IAEF,cAAc,OACZ,4BACA;IAEF,UAAU,aAAa,wBAAwB;IAE/C,gBAAgB;IAChB,2BAA2B,OACzB,yCACA,mCAAmC,8DAA8D;;IAGnG,iBAAiB;IACjB,qBAAqB,YAAY,mCAAmC;QAClE;QACA;KACD;AACH;AAGO,MAAM,mBAAmB,IAAI,kBAAkB,EAAE,uCAAuC;AAGxF,MAAM,WAAW,IAAI,QAAQ;AAC7B,MAAM,aAAa;AACnB,MAAM,UAAU,IAAI,OAAO;AAG3B,MAAM,gBAAgB,oDAAyB;AAC/C,MAAM,iBAAiB,oDAAyB","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///Users/reehju/Documents/code/hydros/hydros-world/lib/config.ts"],"sourcesContent":["import { defineChain } from \"viem\";\nimport { CONTRACT_ADDRESS } from \"./env\";\n\nexport const HYDROS_CONTRACT_ADDRESS = CONTRACT_ADDRESS as `0x${string}`;\n\nexport const hypeNetwork = defineChain({\n  id: 998,\n  name: \"Hype Testnet\",\n  nativeCurrency: {\n    decimals: 18,\n    name: \"HYPE\",\n    symbol: \"HYPE\",\n  },\n  rpcUrls: {\n    default: {\n      http: [\"https://rpc.hyperliquid-testnet.xyz/evm\"],\n    },\n    public: {\n      http: [\"https://rpc.hyperliquid-testnet.xyz/evm\"],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: \"HypeScan\",\n      url: \"https://explorer.hyperliquid-testnet.xyz\",\n    },\n  },\n  testnet: true,\n});\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,0BAA0B,0GAAA,CAAA,mBAAgB;AAEhD,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD,EAAE;IACrC,IAAI;IACJ,MAAM;IACN,gBAAgB;QACd,UAAU;QACV,MAAM;QACN,QAAQ;IACV;IACA,SAAS;QACP,SAAS;YACP,MAAM;gBAAC;aAA0C;QACnD;QACA,QAAQ;YACN,MAAM;gBAAC;aAA0C;QACnD;IACF;IACA,gBAAgB;QACd,SAAS;YACP,MAAM;YACN,KAAK;QACP;IACF;IACA,SAAS;AACX","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///Users/reehju/Documents/code/hydros/hydros-world/lib/client.ts"],"sourcesContent":["import { createPublicClient, http } from \"viem\";\nimport { hypeNetwork } from \"./config\";\n\n// Create a public client without requiring signing capabilities\nexport const publicClient = createPublicClient({\n  chain: hypeNetwork,\n  transport: http(hypeNetwork.rpcUrls.default.http[0]),\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAGO,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,qBAAkB,AAAD,EAAE;IAC7C,OAAO,6GAAA,CAAA,cAAW;IAClB,WAAW,CAAA,GAAA,6JAAA,CAAA,OAAI,AAAD,EAAE,6GAAA,CAAA,cAAW,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACrD","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///Users/reehju/Documents/code/hydros/hydros-world/lib/hooks/useUserInfos.ts"],"sourcesContent":["\"use client\";\n\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useAccount } from \"wagmi\";\nimport { HYDROS_CONTRACT_ADDRESS } from \"../config\";\nimport { getBalance, readContract } from \"viem/actions\";\nimport { publicClient } from \"../client\";\nimport { Abi, Client, parseAbi } from \"viem\";\n\n// For testing purposes - a simple Merkle tree with a few addresses\n// In production, this would be generated server-side\nexport const generateMerkleProof = (\n  address: `0x${string}` | undefined\n): `0x${string}`[] => {\n  if (!address) return [];\n\n  try {\n    // Try to load the Merkle proofs from localStorage\n    if (typeof window !== \"undefined\") {\n      // Check if we have any proofs stored in localStorage\n      const storedProofs = localStorage.getItem(\"merkleProofs\");\n      if (storedProofs) {\n        try {\n          const proofs = JSON.parse(storedProofs);\n\n          // Normalize the input address to lowercase for case-insensitive comparison\n          const normalizedAddress = address.toLowerCase();\n\n          // Check if the address has a proof in the loaded proofs\n          if (proofs[normalizedAddress]) {\n            console.log(\n              `Found stored merkle proof for address ${normalizedAddress}`\n            );\n            return proofs[normalizedAddress] as `0x${string}`[];\n          }\n\n          console.log(`No stored proof found for address ${normalizedAddress}`);\n        } catch (e) {\n          console.error(\"Failed to parse stored merkle proofs:\", e);\n        }\n      }\n    }\n\n    // Fallback to the special case for testing addresses\n    // For demonstration purposes - in production these would be fetched from an API\n    // Using test data for the given Merkle root: 0xf8aebec120740b38b7a9c779fd1dbccad210f75ffa13542bb2fdd1899f621d6f\n    const testWhitelistedAddresses: Record<string, `0x${string}`[]> = {\n      // Example addresses with their proofs for the specified root\n      // Replace these with actual proofs for your Merkle tree\n      \"0x4cf877aca8ed18372bb28791c0c69339c27f7d78\": [\n        \"0x523b14741c3b4fd4abbf54e1b0c9239c7d98888fbddd684f49ef7b47de710108\",\n      ],\n      \"0xD5de5a673C2FafeFbBE942B6A9Cbd30599D65Ec4\": [\n        \"0xe8593bda6b9a4a695ede09b2076df180522e3bac297a6f5b9e4dbc4b43630d3d\",\n        \"0x0c34dbce7f2c459885fa9652d1f4dd55a4c5775961e75463aa6bd6299ad31e26\",\n      ],\n      \"0xfC08eCB5a9467a37329D4f5B515BDd4752A331cB\": [\n        \"0xb24e732b8d3e7a79e5b3d45135057c1cc2814cd92b281de351568300549f0142\",\n        \"0x0c34dbce7f2c459885fa9652d1f4dd55a4c5775961e75463aa6bd6299ad31e26\",\n      ],\n      // Add more whitelisted addresses and their proofs as needed\n    };\n\n    const normalizedAddress = address.toLowerCase();\n    if (testWhitelistedAddresses[normalizedAddress]) {\n      console.log(`Address ${normalizedAddress} is whitelisted with proof`);\n      return testWhitelistedAddresses[normalizedAddress];\n    }\n\n    console.log(`Address ${normalizedAddress} is not whitelisted`);\n    return [];\n  } catch (error) {\n    console.error(\"Error generating merkle proof:\", error);\n    return [];\n  }\n};\n\n// Define ABI\nconst HydrosNFTSaleABI = parseAbi([\n  \"function balanceOf(address owner) view returns (uint256)\",\n  \"function whitelistMinted(address user) view returns (uint256)\",\n  \"function isWhitelisted(address account, bytes32[] calldata proof) view returns (bool)\",\n]) as Abi;\n\nexport interface UserInfos {\n  nftBalance: bigint;\n  whitelistMinted: bigint;\n  nativeBalance: bigint;\n  isWhitelisted: boolean;\n}\n\nexport function useUserInfos() {\n  const { address, isConnected } = useAccount();\n\n  return useQuery({\n    queryKey: [\"userInfos\", address, isConnected],\n    queryFn: async (): Promise<UserInfos> => {\n      if (!address || !isConnected) {\n        return {\n          nftBalance: BigInt(0),\n          whitelistMinted: BigInt(0),\n          nativeBalance: BigInt(0),\n          isWhitelisted: false,\n        };\n      }\n\n      try {\n        // Get NFT balance and whitelist minted count\n        const [nftBalance, whitelistMinted] = await Promise.all([\n          readContract(publicClient as Client, {\n            address: HYDROS_CONTRACT_ADDRESS,\n            abi: HydrosNFTSaleABI,\n            functionName: \"balanceOf\",\n            args: [address],\n          }),\n          readContract(publicClient as Client, {\n            address: HYDROS_CONTRACT_ADDRESS,\n            abi: HydrosNFTSaleABI,\n            functionName: \"whitelistMinted\",\n            args: [address],\n          }),\n        ]);\n\n        // Get native token balance\n        const nativeBalance = await getBalance(publicClient as Client, {\n          address,\n        });\n\n        // Get isWhitelisted status\n        const isWhitelisted = (await readContract(publicClient as Client, {\n          address: HYDROS_CONTRACT_ADDRESS,\n          abi: HydrosNFTSaleABI,\n          functionName: \"isWhitelisted\",\n          args: [address, generateMerkleProof(address)],\n        })) as boolean;\n\n        return {\n          nftBalance: nftBalance as bigint,\n          whitelistMinted: whitelistMinted as bigint,\n          nativeBalance: nativeBalance.valueOf(),\n          isWhitelisted,\n        };\n      } catch (error) {\n        console.error(\"Error fetching user balance:\", error);\n        return {\n          isWhitelisted: false,\n          nftBalance: BigInt(0),\n          whitelistMinted: BigInt(0),\n          nativeBalance: BigInt(0),\n        };\n      }\n    },\n    enabled: !!address && isConnected,\n    // Refresh every 15 seconds while connected\n    refetchInterval: isConnected ? 15000 : false,\n  });\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAPA;;;;;;;AAWO,MAAM,sBAAsB,CACjC;IAEA,IAAI,CAAC,SAAS,OAAO,EAAE;IAEvB,IAAI;QACF,kDAAkD;QAClD,uCAAmC;;QAuBnC;QAEA,qDAAqD;QACrD,gFAAgF;QAChF,gHAAgH;QAChH,MAAM,2BAA4D;YAChE,6DAA6D;YAC7D,wDAAwD;YACxD,8CAA8C;gBAC5C;aACD;YACD,8CAA8C;gBAC5C;gBACA;aACD;YACD,8CAA8C;gBAC5C;gBACA;aACD;QAEH;QAEA,MAAM,oBAAoB,QAAQ,WAAW;QAC7C,IAAI,wBAAwB,CAAC,kBAAkB,EAAE;YAC/C,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,kBAAkB,0BAA0B,CAAC;YACpE,OAAO,wBAAwB,CAAC,kBAAkB;QACpD;QAEA,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,kBAAkB,mBAAmB,CAAC;QAC7D,OAAO,EAAE;IACX,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,EAAE;IACX;AACF;AAEA,aAAa;AACb,MAAM,mBAAmB,CAAA,GAAA,uKAAA,CAAA,WAAQ,AAAD,EAAE;IAChC;IACA;IACA;CACD;AASM,SAAS;IACd,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAE1C,OAAO,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QACd,UAAU;YAAC;YAAa;YAAS;SAAY;QAC7C,SAAS;YACP,IAAI,CAAC,WAAW,CAAC,aAAa;gBAC5B,OAAO;oBACL,YAAY,OAAO;oBACnB,iBAAiB,OAAO;oBACxB,eAAe,OAAO;oBACtB,eAAe;gBACjB;YACF;YAEA,IAAI;gBACF,6CAA6C;gBAC7C,MAAM,CAAC,YAAY,gBAAgB,GAAG,MAAM,QAAQ,GAAG,CAAC;oBACtD,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE,6GAAA,CAAA,eAAY,EAAY;wBACnC,SAAS,6GAAA,CAAA,0BAAuB;wBAChC,KAAK;wBACL,cAAc;wBACd,MAAM;4BAAC;yBAAQ;oBACjB;oBACA,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE,6GAAA,CAAA,eAAY,EAAY;wBACnC,SAAS,6GAAA,CAAA,0BAAuB;wBAChC,KAAK;wBACL,cAAc;wBACd,MAAM;4BAAC;yBAAQ;oBACjB;iBACD;gBAED,2BAA2B;gBAC3B,MAAM,gBAAgB,MAAM,CAAA,GAAA,+JAAA,CAAA,aAAU,AAAD,EAAE,6GAAA,CAAA,eAAY,EAAY;oBAC7D;gBACF;gBAEA,2BAA2B;gBAC3B,MAAM,gBAAiB,MAAM,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE,6GAAA,CAAA,eAAY,EAAY;oBAChE,SAAS,6GAAA,CAAA,0BAAuB;oBAChC,KAAK;oBACL,cAAc;oBACd,MAAM;wBAAC;wBAAS,oBAAoB;qBAAS;gBAC/C;gBAEA,OAAO;oBACL,YAAY;oBACZ,iBAAiB;oBACjB,eAAe,cAAc,OAAO;oBACpC;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,gCAAgC;gBAC9C,OAAO;oBACL,eAAe;oBACf,YAAY,OAAO;oBACnB,iBAAiB,OAAO;oBACxB,eAAe,OAAO;gBACxB;YACF;QACF;QACA,SAAS,CAAC,CAAC,WAAW;QACtB,2CAA2C;QAC3C,iBAAiB,cAAc,QAAQ;IACzC;AACF","debugId":null}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"sources":["file:///Users/reehju/Documents/code/hydros/hydros-world/components/ConnectButton.tsx"],"sourcesContent":["\"use client\";\n\nimport { useAccount } from \"wagmi\";\nimport { useEffect, useState } from \"react\";\nimport { formatUnits } from \"viem\";\nimport { ConnectButton as RainbowConnectButton } from \"@rainbow-me/rainbowkit\";\nimport \"@rainbow-me/rainbowkit/styles.css\";\n\nimport { Button } from \"./ui/button\";\nimport { HypeLogo } from \"@/lib/utils/utils\";\nimport { useUserInfos } from \"@/lib/hooks/useUserInfos\";\nimport { Avatar } from \"@/lib/utils/utils\";\nimport { ENV } from \"@/lib/env\";\n\nexport function ConnectButton() {\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMounted, setIsMounted] = useState(false);\n  const { address } = useAccount();\n  const { data: userInfos } = useUserInfos();\n\n  // Handle window resize to determine if mobile view should be used\n  useEffect(() => {\n    setIsMounted(true);\n\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 1080);\n    };\n\n    // Set initial value\n    handleResize();\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // Format the address for display\n  const formatAddress = (addr: string) => {\n    if (!addr) return \"\";\n\n    return isMobile\n      ? `${addr.slice(0, 4)}...${addr.slice(-4).toUpperCase()}.HL`\n      : `${addr.slice(0, 6)}...${addr.slice(-6).toUpperCase()}.HL`;\n  };\n\n  // Only render the actual content after component has mounted on the client\n  // This avoids hydration mismatches\n  if (!isMounted) {\n    return (\n      <div className=\"opacity-0\">\n        <Button>{isMobile ? \"Connect\" : \"CONNECT WALLET\"}</Button>\n      </div>\n    );\n  }\n\n  return (\n    <RainbowConnectButton.Custom>\n      {({\n        account,\n        chain,\n        openAccountModal,\n        openChainModal,\n        openConnectModal,\n        mounted,\n      }) => {\n        const ready = mounted && isMounted;\n\n        return (\n          <div\n            {...(!ready && {\n              \"aria-hidden\": true,\n              style: {\n                opacity: 0,\n                pointerEvents: \"none\",\n                userSelect: \"none\",\n              },\n            })}\n          >\n            {(() => {\n              if (!account) {\n                return (\n                  <Button onClick={openConnectModal} type=\"button\">\n                    {isMobile ? \"Connect\" : \"CONNECT WALLET\"}\n                  </Button>\n                );\n              }\n\n              if (chain?.id !== ENV.CHAIN_ID) {\n                return (\n                  <Button\n                    onClick={openChainModal}\n                    className=\"bg-primary/80 border border-primary/20 text-white font-herculanum px-4 py-2 rounded-md\"\n                  >\n                    WRONG NETWORK\n                  </Button>\n                );\n              }\n\n              return (\n                <div className=\"flex items-end gap-1\">\n                  <div className=\"flex flex-col items-end space-x-2\">\n                    <span\n                      className=\"uppercase font-herculanum text-xs lg:text-sm text-[#98FCE4]\"\n                      style={{ fontFamily: \"'Herculanum', sans-serif\" }}\n                    >\n                      {formatAddress(address || \"\")}\n                    </span>\n                    <div className=\"bg-transparent px-2 rounded-full flex items-center space-x-1 border border-[#98FCE4]/30\">\n                      <span\n                        className=\"text-[#98FCE4] font-herculanum text-xs lg:text-sm\"\n                        style={{ fontFamily: \"'Herculanum', sans-serif\" }}\n                      >\n                        {userInfos?.nativeBalance\n                          ? Number(\n                              formatUnits(userInfos.nativeBalance, 18)\n                            ).toFixed(2)\n                          : \"0.00\"}\n                      </span>\n                      <HypeLogo />\n                    </div>\n                  </div>\n                  <Avatar\n                    onClick={() => {\n                      console.log(\"clicked\");\n                      openAccountModal?.();\n                    }}\n                  />\n                </div>\n              );\n            })()}\n          </div>\n        );\n      }}\n    </RainbowConnectButton.Custom>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAZA;;;;;;;;;;;;AAcO,SAAS;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAC7B,MAAM,EAAE,MAAM,SAAS,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,eAAY,AAAD;IAEvC,kEAAkE;IAClE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,aAAa;QAEb,MAAM,eAAe;YACnB,YAAY,OAAO,UAAU,GAAG;QAClC;QAEA,oBAAoB;QACpB;QAEA,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG,EAAE;IAEL,iCAAiC;IACjC,MAAM,gBAAgB,CAAC;QACrB,IAAI,CAAC,MAAM,OAAO;QAElB,OAAO,WACH,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,KAAK,KAAK,CAAC,CAAC,GAAG,WAAW,GAAG,GAAG,CAAC,GAC1D,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,KAAK,KAAK,CAAC,CAAC,GAAG,WAAW,GAAG,GAAG,CAAC;IAChE;IAEA,2EAA2E;IAC3E,mCAAmC;IACnC,IAAI,CAAC,WAAW;QACd,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,2HAAA,CAAA,SAAM;0BAAE,WAAW,YAAY;;;;;;;;;;;IAGtC;IAEA,qBACE,8OAAC,8KAAA,CAAA,gBAAoB,CAAC,MAAM;kBACzB,CAAC,EACA,OAAO,EACP,KAAK,EACL,gBAAgB,EAChB,cAAc,EACd,gBAAgB,EAChB,OAAO,EACR;YACC,MAAM,QAAQ,WAAW;YAEzB,qBACE,8OAAC;gBACE,GAAI,CAAC,SAAS;oBACb,eAAe;oBACf,OAAO;wBACL,SAAS;wBACT,eAAe;wBACf,YAAY;oBACd;gBACF,CAAC;0BAEA,CAAC;oBACA,IAAI,CAAC,SAAS;wBACZ,qBACE,8OAAC,2HAAA,CAAA,SAAM;4BAAC,SAAS;4BAAkB,MAAK;sCACrC,WAAW,YAAY;;;;;;oBAG9B;oBAEA,IAAI,OAAO,OAAO,0GAAA,CAAA,MAAG,CAAC,QAAQ,EAAE;wBAC9B,qBACE,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAS;4BACT,WAAU;sCACX;;;;;;oBAIL;oBAEA,qBACE,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,WAAU;wCACV,OAAO;4CAAE,YAAY;wCAA2B;kDAE/C,cAAc,WAAW;;;;;;kDAE5B,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDACC,WAAU;gDACV,OAAO;oDAAE,YAAY;gDAA2B;0DAE/C,WAAW,gBACR,OACE,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD,EAAE,UAAU,aAAa,EAAE,KACrC,OAAO,CAAC,KACV;;;;;;0DAEN,8OAAC,sHAAA,CAAA,WAAQ;;;;;;;;;;;;;;;;;0CAGb,8OAAC,sHAAA,CAAA,SAAM;gCACL,SAAS;oCACP,QAAQ,GAAG,CAAC;oCACZ;gCACF;;;;;;;;;;;;gBAIR,CAAC;;;;;;QAGP;;;;;;AAGN","debugId":null}},
    {"offset": {"line": 688, "column": 0}, "map": {"version":3,"sources":["file:///Users/reehju/Documents/code/hydros/hydros-world/lib/hooks/useSaleInfoTestnet.ts"],"sourcesContent":["\"use client\";\n\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Abi, parseAbi } from \"viem\";\nimport { useAccount } from \"wagmi\";\n\nimport { SalesInfo, SalePhase } from \"../abi/types\";\nimport { HYDROS_CONTRACT_ADDRESS } from \"../config\";\nimport { publicClient } from \"../client\";\n\n// Define ABI instead of importing JSON to ensure proper TypeScript typing\nconst HydrosNFTSaleABI = parseAbi([\n  \"function getCurrentPhase() view returns (uint8)\",\n  \"function whitelistSaleConfig() view returns (uint256 price, uint256 startTime, uint256 duration, uint256 maxPerWallet, uint256 maxSupply)\",\n  \"function auctionSaleConfig() view returns (uint256 price, uint256 floorPrice, uint256 startTime, uint256 duration, uint256 maxPerWallet)\",\n  \"function MAX_SUPPLY() view returns (uint256)\",\n  \"function totalSupply() view returns (uint256)\",\n  \"function transfersEnabled() view returns (bool)\",\n  \"function revealEnabled() view returns (bool)\",\n  \"function getCurrentPrice() view returns (uint256)\",\n  \"function PRICE_UPDATE_INTERVAL() view returns (uint256)\",\n  \"function getUnrevealedTokens(address owner) external view returns (uint256[] memory)\",\n]) as Abi;\n\n// Extended SalesInfo interface to include price step\nexport interface ExtendedSalesInfo extends SalesInfo {\n  priceStep: bigint;\n  currentPrice: bigint;\n  priceUpdateInterval: bigint;\n  unrevealedTokens: bigint[]; // Array of unrevealed token IDs\n}\n\nexport function useSaleInfoTestnet() {\n  const { address } = useAccount();\n\n  return useQuery({\n    queryKey: [\"saleInfoTestnet\", address],\n    queryFn: async (): Promise<ExtendedSalesInfo | undefined> => {\n      try {\n        // Make individual contract calls instead of using multicall\n        // 1. Get current phase\n        const currentPhaseResult = await publicClient.readContract({\n          address: HYDROS_CONTRACT_ADDRESS,\n          abi: HydrosNFTSaleABI,\n          functionName: \"getCurrentPhase\",\n        });\n\n        const getUnrevealedTokensResult = address\n          ? ((await publicClient.readContract({\n              address: HYDROS_CONTRACT_ADDRESS,\n              abi: HydrosNFTSaleABI,\n              functionName: \"getUnrevealedTokens\",\n              args: [address],\n            })) as bigint[])\n          : [];\n\n        // 2. Get whitelist sale config\n        const whitelistSaleConfigResult = await publicClient.readContract({\n          address: HYDROS_CONTRACT_ADDRESS,\n          abi: HydrosNFTSaleABI,\n          functionName: \"whitelistSaleConfig\",\n        });\n\n        // 3. Get auction sale config\n        const auctionSaleConfigResult = await publicClient.readContract({\n          address: HYDROS_CONTRACT_ADDRESS,\n          abi: HydrosNFTSaleABI,\n          functionName: \"auctionSaleConfig\",\n        });\n\n        // 4. Get max supply\n        const maxSupplyResult = await publicClient.readContract({\n          address: HYDROS_CONTRACT_ADDRESS,\n          abi: HydrosNFTSaleABI,\n          functionName: \"MAX_SUPPLY\",\n        });\n\n        // 5. Get total supply\n        const totalSupplyResult = await publicClient.readContract({\n          address: HYDROS_CONTRACT_ADDRESS,\n          abi: HydrosNFTSaleABI,\n          functionName: \"totalSupply\",\n        });\n\n        // 6. Get transfers enabled\n        const transfersEnabledResult = await publicClient.readContract({\n          address: HYDROS_CONTRACT_ADDRESS,\n          abi: HydrosNFTSaleABI,\n          functionName: \"transfersEnabled\",\n        });\n\n        // 7. Get reveal enabled\n        const revealEnabledResult = await publicClient.readContract({\n          address: HYDROS_CONTRACT_ADDRESS,\n          abi: HydrosNFTSaleABI,\n          functionName: \"revealEnabled\",\n        });\n\n        // 8. Get current price\n        const currentPriceResult = await publicClient.readContract({\n          address: HYDROS_CONTRACT_ADDRESS,\n          abi: HydrosNFTSaleABI,\n          functionName: \"getCurrentPrice\",\n        });\n\n        // 9. Get price update interval\n        const priceUpdateIntervalResult = await publicClient.readContract({\n          address: HYDROS_CONTRACT_ADDRESS,\n          abi: HydrosNFTSaleABI,\n          functionName: \"PRICE_UPDATE_INTERVAL\",\n        });\n\n        // Cast the phase to SalePhase type\n        const phase = Number(currentPhaseResult) as SalePhase;\n        const unrevealedTokens = getUnrevealedTokensResult as bigint[];\n\n        // Safe type assertion for the structured returns\n        const wlConfig = whitelistSaleConfigResult as unknown as [\n          bigint,\n          bigint,\n          bigint,\n          bigint,\n          bigint\n        ];\n\n        const auctionConfig = auctionSaleConfigResult as unknown as [\n          bigint,\n          bigint,\n          bigint,\n          bigint,\n          bigint\n        ];\n\n        console.log(\"auctionConfig\", auctionConfig);\n        console.log(\"wlConfig\", wlConfig);\n        // Calculate the price step based on the auction config and price update interval\n        // From the contract: price decreases linearly over time\n        const startPrice = auctionConfig[0];\n        const duration = auctionConfig[2];\n        const priceUpdateInterval = priceUpdateIntervalResult as bigint;\n\n        // Calculate number of intervals in the auction duration\n        const numIntervals = duration / priceUpdateInterval;\n\n        // Price step is the amount price decreases per interval\n        // Calculated as total price range divided by number of intervals\n        const priceStep =\n          numIntervals > 0 ? startPrice / numIntervals : BigInt(0);\n\n        return {\n          currentPhase: phase,\n          whitelistSaleConfig: {\n            price: wlConfig[0],\n            startTime: wlConfig[1],\n            duration: wlConfig[2],\n            maxPerWallet: wlConfig[3],\n            maxSupply: wlConfig[4],\n          },\n          auctionSaleConfig: {\n            price: auctionConfig[0],\n            floorPrice: auctionConfig[1],\n            startTime: auctionConfig[2],\n            duration: auctionConfig[3],\n            maxPerWallet: auctionConfig[4],\n          },\n          maxSupply: maxSupplyResult as bigint,\n          totalSupply: totalSupplyResult as bigint,\n          transfersEnabled: Boolean(transfersEnabledResult),\n          revealEnabled: Boolean(revealEnabledResult),\n          // Additional fields\n          priceStep: priceStep,\n          currentPrice: currentPriceResult as bigint,\n          priceUpdateInterval: priceUpdateIntervalResult as bigint,\n          unrevealedTokens,\n        };\n      } catch (error) {\n        console.error(\"Error fetching sale info from testnet:\", error);\n        throw error;\n      }\n    },\n    // Refresh every 30 seconds\n    // refetchInterval: 30000,\n  });\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 844, "column": 0}, "map": {"version":3,"sources":["file:///Users/reehju/Documents/code/hydros/hydros-world/components/Navbar.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { usePathname } from \"next/navigation\";\nimport { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { ConnectButton } from \"./ConnectButton\";\nimport { useSaleInfoTestnet } from \"@/lib/hooks/useSaleInfoTestnet\";\n\nexport default function Navbar() {\n  const pathname = usePathname();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(true);\n\n  const { data: saleInfo } = useSaleInfoTestnet();\n  const unrevealedTokens = saleInfo?.unrevealedTokens;\n\n  // Handle window resize to determine if mobile view should be used\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 1080);\n    };\n\n    // Set initial value\n    handleResize();\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // Close menu when route changes\n  useEffect(() => {\n    setIsMenuOpen(false);\n  }, [pathname]);\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const navLinks = [\n    { href: \"/\", label: \"HOME\" },\n    { href: \"/mint\", label: \"MINT\" },\n    { href: \"/reveal\", label: \"REVEAL\" },\n    { href: \"/collection\", label: \"COLLECTION\" },\n  ];\n\n  return (\n    <header className=\"w-full py-6 px-4 lg:px-8 bg-transparent relative z-50\">\n      <div className=\"mx-auto flex items-center justify-between\">\n        {/* Hamburger Menu (Mobile) */}\n        <div className=\"lg:hidden z-20\">\n          <button\n            onClick={toggleMenu}\n            className=\"flex flex-col justify-center items-center w-8 h-8 border border-primary/30 rounded p-1\"\n            aria-label=\"Toggle Menu\"\n          >\n            <span\n              className={`bg-white block transition-all duration-300 ease-out h-0.5 w-6 rounded-sm ${\n                isMenuOpen ? \"rotate-45 translate-y-1\" : \"-translate-y-0.5\"\n              }`}\n            ></span>\n            <span\n              className={`bg-white block transition-all duration-300 ease-out h-0.5 w-6 rounded-sm my-0.5 ${\n                isMenuOpen ? \"opacity-0\" : \"opacity-100\"\n              }`}\n            ></span>\n            <span\n              className={`bg-white block transition-all duration-300 ease-out h-0.5 w-6 rounded-sm ${\n                isMenuOpen ? \"-rotate-45 -translate-y-1\" : \"translate-y-0.5\"\n              }`}\n            ></span>\n          </button>\n        </div>\n\n        {/* Desktop Navigation */}\n        <nav className=\"hidden lg:flex items-center space-x-2\">\n          {navLinks.map((link) => (\n            <Link\n              key={link.href}\n              href={link.href}\n              className={`nav-link ${pathname === link.href ? \"active\" : \"\"}`}\n              style={{ fontFamily: \"'Herculanum', 'Rajdhani', sans-serif\" }}\n            >\n              {link.label}{\" \"}\n              {link.href === \"/reveal\" &&\n                unrevealedTokens?.length &&\n                unrevealedTokens?.length > 0 && (\n                  <span className=\"text-teal-50 font-herculanum text-[16px] bg-teal-500/30 px-2 py-1 rounded-full\">\n                    {unrevealedTokens?.length}\n                  </span>\n                )}\n            </Link>\n          ))}\n        </nav>\n\n        {/* Mobile Navigation Overlay */}\n        <AnimatePresence>\n          {isMenuOpen && (\n            <motion.div\n              className=\"lg:hidden fixed inset-0  backdrop-blur-sm z-10\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 0.2 }}\n            >\n              <motion.nav\n                className=\"flex flex-col items-center justify-center h-full gap-6\"\n                initial={{ opacity: 0, y: -20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.1, staggerChildren: 0.1 }}\n              >\n                {navLinks.map((link, index) => (\n                  <motion.div\n                    key={link.href}\n                    initial={{ opacity: 0, y: -10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ delay: 0.1 + index * 0.1 }}\n                  >\n                    <Link\n                      href={link.href}\n                      className={`nav-link ${\n                        pathname === link.href ? \"active\" : \"\"\n                      }`}\n                      style={{\n                        fontFamily: \"'Herculanum', 'Rajdhani', sans-serif\",\n                      }}\n                    >\n                      {link.label}\n                    </Link>\n                  </motion.div>\n                ))}\n              </motion.nav>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Logo (Center) */}\n        <div className=\"absolute left-1/2 -translate-x-1/2\">\n          <Link href=\"/\" className=\"flex items-center justify-center\">\n            <motion.div\n              whileHover={{ scale: 1.05 }}\n              transition={{ type: \"spring\", stiffness: 400, damping: 10 }}\n            >\n              <Image\n                src=\"/images/hydros-logo.png\"\n                alt=\"Hydros Logo\"\n                width={isMobile ? 60 : 120}\n                height={isMobile ? 30 : 60}\n                priority\n                className=\"transition-transform lg:w-[120px] lg:h-[60px] w-[60px] h-[30px]\"\n              />\n            </motion.div>\n          </Link>\n        </div>\n\n        {/* Connect Button or Wallet Info (Right) */}\n        <div className=\"flex flex-col items-center space-x-2\">\n          <ConnectButton />\n        </div>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1126, "column": 0}, "map": {"version":3,"sources":["file:///Users/reehju/Documents/code/hydros/hydros-world/lib/providers.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  RainbowKitProvider,\n  darkTheme,\n  getDefaultConfig,\n} from \"@rainbow-me/rainbowkit\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { useState, type ReactNode, useEffect } from \"react\";\nimport { WagmiProvider } from \"wagmi\";\nimport { hypeNetwork } from \"./config\";\nimport { ENV } from \"./env\";\nimport { http } from \"wagmi\";\n\n// Create a QueryClient for data fetching/caching\nconst queryClient = new QueryClient();\n\ninterface Web3ProvidersProps {\n  children: ReactNode;\n}\n\nexport function Web3Providers({ children }: Web3ProvidersProps) {\n  const [mounted, setMounted] = useState(false);\n\n  // Prevent hydration errors by only mounting after client-side render\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const [wagmiConfig] = useState(() =>\n    getDefaultConfig({\n      appName: \"Hydros NFT\",\n      projectId: ENV.WALLET_CONNECT_PROJECT_ID,\n      chains: [hypeNetwork],\n      transports: {\n        [hypeNetwork.id]: http(ENV.RPC_URL),\n      },\n      ssr: false,\n    })\n  );\n\n  // Prevent hydration errors\n  if (!mounted) return null;\n\n  return (\n    <WagmiProvider config={wagmiConfig}>\n      <QueryClientProvider client={queryClient}>\n        <RainbowKitProvider theme={darkTheme()} modalSize=\"compact\">\n          {children}\n        </RainbowKitProvider>\n      </QueryClientProvider>\n    </WagmiProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AAZA;;;;;;;;;AAcA,iDAAiD;AACjD,MAAM,cAAc,IAAI,6KAAA,CAAA,cAAW;AAM5B,SAAS,cAAc,EAAE,QAAQ,EAAsB;IAC5D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,qEAAqE;IACrE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG,EAAE;IAEL,MAAM,CAAC,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAC7B,CAAA,GAAA,8KAAA,CAAA,mBAAgB,AAAD,EAAE;YACf,SAAS;YACT,WAAW,0GAAA,CAAA,MAAG,CAAC,yBAAyB;YACxC,QAAQ;gBAAC,6GAAA,CAAA,cAAW;aAAC;YACrB,YAAY;gBACV,CAAC,6GAAA,CAAA,cAAW,CAAC,EAAE,CAAC,EAAE,CAAA,GAAA,6JAAA,CAAA,OAAI,AAAD,EAAE,0GAAA,CAAA,MAAG,CAAC,OAAO;YACpC;YACA,KAAK;QACP;IAGF,2BAA2B;IAC3B,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE,8OAAC,+IAAA,CAAA,gBAAa;QAAC,QAAQ;kBACrB,cAAA,8OAAC,sLAAA,CAAA,sBAAmB;YAAC,QAAQ;sBAC3B,cAAA,8OAAC,8KAAA,CAAA,qBAAkB;gBAAC,OAAO,CAAA,GAAA,0KAAA,CAAA,YAAS,AAAD;gBAAK,WAAU;0BAC/C;;;;;;;;;;;;;;;;AAKX","debugId":null}}]
}